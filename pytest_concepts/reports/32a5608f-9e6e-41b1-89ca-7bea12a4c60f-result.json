{"name": "test_open_contact_form", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <Appium_Framework.pages.LoginPage.LoginPage object at 0x0000018FC1D29F30>, text = 'aditya', locator_value = 'Enter Admin', locator_type = 'text'\n\n    def sendText(self,text, locator_value, locator_type=\"id\"):\n        element = None\n        try:\n            locator_type = locator_type.lower()\n>           element = self.waitforElement(locator_value, locator_type)\n\n..\\base\\Baseclass.py:77: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Appium_Framework.pages.LoginPage.LoginPage object at 0x0000018FC1D29F30>, locator_value = 'Enter Admin', locator_type = 'text'\n\n    def waitforElement(self, locator_value, locator_type):\n        locator_type = locator_type.lower()\n        element = None\n        wait = WebDriverWait(self.driver, 25, poll_frequency=1,\n                             ignored_exceptions=[ElementNotVisibleException, ElementNotSelectableException,\n                                                 NoSuchElementException])\n    \n        if locator_type == \"id\":\n            element = wait.until(lambda x: x.find_element(AppiumBy.ID, locator_value))\n            return element\n    \n        elif locator_type == \"class\":\n            element = wait.until(lambda x: x.find_element(AppiumBy.CLASS_NAME, locator_value))\n            return element\n    \n        elif locator_type == \"desc\":\n            element = wait.until(lambda x: x.find_element(AppiumBy.ANDROID_UIAUTOMATOR, 'UiSelector().description(\"%s\")' % (locator_value)))\n            return element\n    \n        elif locator_type == \"index\":\n            element = wait.until(lambda x: x.find_element(AppiumBy.ANDROID_UIAUTOMATOR, 'UiSelector().index(\"%d\")' % int(locator_value)))\n            return element\n    \n        elif locator_type == \"text\":\n>           element = wait.until(lambda x: x.find_element(AppiumBy.ANDROID_UIAUTOMATOR, 'text(\"%s\")' % locator_value))\n\n..\\base\\Baseclass.py:41: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"1e58b50b-c8d1-447a-9b7b-61312b1592dc\")>\nmethod = <function Baseclass.waitforElement.<locals>.<lambda> at 0x0000018FC1F4B910>, message = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except InvalidSelectorException as e:\n                raise e\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       NoSuchElementError: An element could not be located on the page using the given search parameters.\nE           at AndroidUiautomator2Driver.findElOrEls (C:\\Program Files\\Appium Server GUI\\resources\\app\\node_modules\\appium\\node_modules\\appium-android-driver\\lib\\commands\\find.js:75:11)\nE           at runMicrotasks (<anonymous>)\nE           at processTicksAndRejections (internal/process/task_queues.js:85:5)\n\n..\\..\\venv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:89: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <Appium_Framework.test.test_login.TestContactUsForm testMethod=test_open_contact_form>\n\n    @pytest.mark.run(order=2)\n    def test_open_contact_form(self):\n>       self.lg.enter_text_admin()\n\ntest_login.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\pages\\LoginPage.py:42: in enter_text_admin\n    self.sendText(\"aditya\", self._enteradmin, \"text\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Appium_Framework.pages.LoginPage.LoginPage object at 0x0000018FC1D29F30>, text = 'aditya', locator_value = 'Enter Admin', locator_type = 'text'\n\n    def sendText(self,text, locator_value, locator_type=\"id\"):\n        element = None\n        try:\n            locator_type = locator_type.lower()\n            element = self.waitforElement(locator_value, locator_type)\n            element.send_keys(text)\n            self.log.info(f\"Send text to Element found with locatortype: \" + locator_type + \"and the locator value is :\" + locator_value)\n        except:\n            self.log.info(f\"Unable to send text to the locator with locatortype: \" + locator_type + \"and with the locator value is:\" + locator_value)\n            self.take_screenshot(locator_type)\n>           assert False\nE           AssertionError\n\n..\\base\\Baseclass.py:83: AssertionError"}, "attachments": [{"name": "text", "source": "166d2a30-bd3c-4b69-91dd-f5f162f54ce6-attachment.png", "type": "image/png"}, {"name": "log", "source": "b7f7a707-54d6-4132-99b4-0a7f5372290e-attachment.txt", "type": "text/plain"}], "start": 1653888453756, "stop": 1653888479379, "uuid": "0afad8d5-8e44-4724-a55b-a2b772e64e34", "historyId": "260963bd51799c2041a3c463f1e43e89", "testCaseId": "b3381803e4eba562db62e0aabe7d07e0", "fullName": "test_login.TestContactUsForm#test_open_contact_form", "labels": [{"name": "tag", "value": "run(order=2)"}, {"name": "tag", "value": "@pytest.mark.usefixtures('beforeclass')"}, {"name": "suite", "value": "test_login"}, {"name": "subSuite", "value": "TestContactUsForm"}, {"name": "host", "value": "DESKTOP-B28TDH5"}, {"name": "thread", "value": "11964-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_login"}]}