{"name": "test_open_login_screen", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <Appium_Framework.pages.LoginPage.LoginPage object at 0x0000018FC1D287C0>, text = 'admin@gmail.com', locator_value = 'Enter Admin', locator_type = 'index'\n\n    def sendText(self,text, locator_value, locator_type=\"id\"):\n        element = None\n        try:\n            locator_type = locator_type.lower()\n>           element = self.waitforElement(locator_value, locator_type)\n\n..\\base\\Baseclass.py:77: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Appium_Framework.pages.LoginPage.LoginPage object at 0x0000018FC1D287C0>, locator_value = 'Enter Admin', locator_type = 'index'\n\n    def waitforElement(self, locator_value, locator_type):\n        locator_type = locator_type.lower()\n        element = None\n        wait = WebDriverWait(self.driver, 25, poll_frequency=1,\n                             ignored_exceptions=[ElementNotVisibleException, ElementNotSelectableException,\n                                                 NoSuchElementException])\n    \n        if locator_type == \"id\":\n            element = wait.until(lambda x: x.find_element(AppiumBy.ID, locator_value))\n            return element\n    \n        elif locator_type == \"class\":\n            element = wait.until(lambda x: x.find_element(AppiumBy.CLASS_NAME, locator_value))\n            return element\n    \n        elif locator_type == \"desc\":\n            element = wait.until(lambda x: x.find_element(AppiumBy.ANDROID_UIAUTOMATOR, 'UiSelector().description(\"%s\")' % (locator_value)))\n            return element\n    \n        elif locator_type == \"index\":\n>           element = wait.until(lambda x: x.find_element(AppiumBy.ANDROID_UIAUTOMATOR, 'UiSelector().index(\"%d\")' % int(locator_value)))\n\n..\\base\\Baseclass.py:37: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"1e58b50b-c8d1-447a-9b7b-61312b1592dc\")>\nmethod = <function Baseclass.waitforElement.<locals>.<lambda> at 0x0000018FC1C8B1C0>, message = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n>               value = method(self._driver)\n\n..\\..\\venv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:78: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nx = <appium.webdriver.webdriver.WebDriver (session=\"1e58b50b-c8d1-447a-9b7b-61312b1592dc\")>\n\n>   element = wait.until(lambda x: x.find_element(AppiumBy.ANDROID_UIAUTOMATOR, 'UiSelector().index(\"%d\")' % int(locator_value)))\nE   ValueError: invalid literal for int() with base 10: 'Enter Admin'\n\n..\\base\\Baseclass.py:37: ValueError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <Appium_Framework.test.test_login.TestContactUsForm testMethod=test_open_login_screen>\n\n    @pytest.mark.run(order=1)\n    def test_open_login_screen(self):\n        cl.allureLogs(\"App opened\")\n        self.lg.clickloginbuton()\n>       self.lg.enter_email()\n\ntest_login.py:25: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\pages\\LoginPage.py:25: in enter_email\n    self.sendText(\"admin@gmail.com\", self._enteradmin, \"index\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Appium_Framework.pages.LoginPage.LoginPage object at 0x0000018FC1D287C0>, text = 'admin@gmail.com', locator_value = 'Enter Admin', locator_type = 'index'\n\n    def sendText(self,text, locator_value, locator_type=\"id\"):\n        element = None\n        try:\n            locator_type = locator_type.lower()\n            element = self.waitforElement(locator_value, locator_type)\n            element.send_keys(text)\n            self.log.info(f\"Send text to Element found with locatortype: \" + locator_type + \"and the locator value is :\" + locator_value)\n        except:\n            self.log.info(f\"Unable to send text to the locator with locatortype: \" + locator_type + \"and with the locator value is:\" + locator_value)\n            self.take_screenshot(locator_type)\n>           assert False\nE           AssertionError\n\n..\\base\\Baseclass.py:83: AssertionError"}, "steps": [{"name": "App opened", "status": "passed", "start": 1653888451613, "stop": 1653888451613}, {"name": "CLicked on login button", "status": "passed", "start": 1653888452272, "stop": 1653888452272}], "attachments": [{"name": "index", "source": "70b176ed-4f04-4190-92c2-c01c7410f3e9-attachment.png", "type": "image/png"}, {"name": "log", "source": "69125a11-4ded-4c70-8bd5-97f7ce55de71-attachment.txt", "type": "text/plain"}], "start": 1653888451613, "stop": 1653888453709, "uuid": "e0a5865f-c0fe-41bd-b7b1-902c21e6e565", "historyId": "694b4494b7bbd0311d43d985a550aa87", "testCaseId": "4960472bb03e1237ebb296fe43a24119", "fullName": "test_login.TestContactUsForm#test_open_login_screen", "labels": [{"name": "tag", "value": "run(order=1)"}, {"name": "tag", "value": "@pytest.mark.usefixtures('beforeclass')"}, {"name": "suite", "value": "test_login"}, {"name": "subSuite", "value": "TestContactUsForm"}, {"name": "host", "value": "DESKTOP-B28TDH5"}, {"name": "thread", "value": "11964-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_login"}]}